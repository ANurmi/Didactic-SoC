<?xml version="1.0" encoding="UTF-8"?>
<ipxact:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ipxact="http://www.accellera.org/XMLSchema/IPXACT/1685-2022" xmlns:kactus2="http://kactus2.cs.tut.fi" xsi:schemaLocation="http://www.accellera.org/XMLSchema/IPXACT/1685-2022 http://www.accellera.org/XMLSchema/IPXACT/1685-2022/index.xsd">
	<ipxact:vendor>tuni.fi</ipxact:vendor>
	<ipxact:library>pulp.peripheral</ipxact:library>
	<ipxact:name>apb_uart_sv</ipxact:name>
	<ipxact:version>1.0</ipxact:version>
	<ipxact:busInterfaces>
		<ipxact:busInterface>
			<ipxact:name>uart</ipxact:name>
			<ipxact:busType vendor="tuni.fi" library="interface" name="UART" version="1.0"/>
			<ipxact:abstractionTypes>
				<ipxact:abstractionType>
					<ipxact:abstractionRef vendor="tuni.fi" library="interface" name="UART.absDef" version="1.0"/>
					<ipxact:portMaps>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>uart_rx</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>rx_i</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>uart_tx</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>tx_o</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
					</ipxact:portMaps>
				</ipxact:abstractionType>
			</ipxact:abstractionTypes>
			<ipxact:initiator/>
		</ipxact:busInterface>
		<ipxact:busInterface>
			<ipxact:name>apb</ipxact:name>
			<ipxact:busType vendor="tuni.fi" library="interface" name="APB" version="1.0"/>
			<ipxact:abstractionTypes>
				<ipxact:abstractionType>
					<ipxact:abstractionRef vendor="tuni.fi" library="interface" name="APB.absDef" version="1.0"/>
					<ipxact:portMaps>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>PADDR</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>PADDR</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>PENABLE</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>PENABLE</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>PRDATA</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>PRDATA</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>PREADY</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>PREADY</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>PSEL</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>PSEL</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>PSLVERR</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>PSLVERR</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>PWDATA</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>PWDATA</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>PWRITE</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>PWRITE</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
					</ipxact:portMaps>
				</ipxact:abstractionType>
			</ipxact:abstractionTypes>
			<ipxact:target/>
		</ipxact:busInterface>
		<ipxact:busInterface>
			<ipxact:name>clk</ipxact:name>
			<ipxact:busType vendor="tuni.fi" library="interface" name="clock" version="1.0"/>
			<ipxact:abstractionTypes>
				<ipxact:abstractionType>
					<ipxact:abstractionRef vendor="tuni.fi" library="interface" name="clock.absDef" version="1.0"/>
					<ipxact:portMaps>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>clk</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>CLK</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
					</ipxact:portMaps>
				</ipxact:abstractionType>
			</ipxact:abstractionTypes>
			<ipxact:target/>
		</ipxact:busInterface>
		<ipxact:busInterface>
			<ipxact:name>rst_n</ipxact:name>
			<ipxact:busType vendor="tuni.fi" library="interface" name="reset" version="1.0"/>
			<ipxact:abstractionTypes>
				<ipxact:abstractionType>
					<ipxact:abstractionRef vendor="tuni.fi" library="interface" name="reset.absDef" version="1.0"/>
					<ipxact:portMaps>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>reset</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>RSTN</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
					</ipxact:portMaps>
				</ipxact:abstractionType>
			</ipxact:abstractionTypes>
			<ipxact:target/>
		</ipxact:busInterface>
		<ipxact:busInterface>
			<ipxact:name>irq</ipxact:name>
			<ipxact:busType vendor="tuni.fi" library="interface" name="IRQ" version="1.0"/>
			<ipxact:abstractionTypes>
				<ipxact:abstractionType>
					<ipxact:abstractionRef vendor="tuni.fi" library="interface" name="IRQ.absDef" version="1.0"/>
					<ipxact:portMaps>
						<ipxact:portMap>
							<ipxact:logicalPort>
								<ipxact:name>irq</ipxact:name>
							</ipxact:logicalPort>
							<ipxact:physicalPort>
								<ipxact:name>event_o</ipxact:name>
							</ipxact:physicalPort>
							<ipxact:isInformative>false</ipxact:isInformative>
						</ipxact:portMap>
					</ipxact:portMaps>
				</ipxact:abstractionType>
			</ipxact:abstractionTypes>
			<ipxact:initiator/>
		</ipxact:busInterface>
	</ipxact:busInterfaces>
	<ipxact:memoryMaps>
		<ipxact:memoryMap>
			<ipxact:name>apb_uart</ipxact:name>
			<ipxact:addressBlock>
				<ipxact:name>registers</ipxact:name>
				<ipxact:baseAddress>'h0</ipxact:baseAddress>
				<ipxact:range>32</ipxact:range>
				<ipxact:width>8</ipxact:width>
				<ipxact:register>
					<ipxact:name>IER_DLM</ipxact:name>
					<ipxact:description>IER_DLM is a multi-purpose register address. you can access 2 different registers using the same address.												IF LCR[7] is 0 IER is accessable. O.W DLM is accessable.  										IER writes/reads into/from position IER
	=&gt; IER[2:0]: The interrupt enable bits.
		=&gt; xx1:	Interrupt is raised when Received data 				available or trigger level reached in FIFO 				mode if non of these it checks Character 				timeout indication.
		=&gt; x10:	Interrupt is raised when Transmitter 					holding register empty.
		=&gt; 100: 	Interrupt is raised when Overrun error, 				parity error, framing error or break 					interrupt.
	=&gt; other bits aren't used		</ipxact:description>
					<ipxact:addressOffset>'h4</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:field>
						<ipxact:name>IER_DLM</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>IIR_FCR</ipxact:name>
					<ipxact:description>IIR_FCR is a multi-purpose register address. you can access 2 different registers using the same address.	However LCR[7] isn't needed in this case because one of them is only written and the other is only read.										 FCR (fifo control register) write only
	=&gt; FCR[1]: clears the rx fifo if high
	=&gt; FCR[2]: clears the tx fifo if high
	=&gt; FCR[7:6]: sets the trigger level
		=&gt;00: 	trigger level is high when there is 1 					element in the fifo
		=&gt;01: 	trigger level is high when there are 4 				elements in 	the fifo
		=&gt;10: 	trigger level is high when there are 8 				elements in the fifo
		=&gt;11: 	trigger level is high when there are 14 				elements in the fifo
	=&gt; other bits aren't used
IIR (Interrupt Identification Register) read only		</ipxact:description>
					<ipxact:addressOffset>'h8</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:field>
						<ipxact:name>IIR_FCR</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>LCR</ipxact:name>
					<ipxact:description>LCR is a register configures the main operation of the uart. It configures the width of the received data, stop bit, parity, and DLAB bit.											=&gt; LCR[1:0]: configuration bits
		=&gt;00: data is configured to be 5 bits
		=&gt;01: data is configured to be 6 bits
		=&gt;10: data is configured to be 7 bits
		=&gt;11: data is configured to be 8 bits
	=&gt; LCR[2]: stop bit configuration
		=&gt;0: 1 stop bit
		=&gt;1: 1.5 stop bits for 5 bits data word OR 2 stop bits 				6, 7 or 8 bits data word
	=&gt; LCR[3]: parity enable bit
	=&gt; LCR[7]: divisor latch access bit (DLAB)
		=&gt;0: RBR, THR and IER accessible
		=&gt;1: DLL and DLM accessible
	=&gt; other bits aren't used</ipxact:description>
					<ipxact:addressOffset>'hC</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:field>
						<ipxact:name>LCR</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>MCR</ipxact:name>
					<ipxact:description>modem control</ipxact:description>
					<ipxact:addressOffset>'h10</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:field>
						<ipxact:name>MCR</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>LSR</ipxact:name>
					<ipxact:description>LSR is the line status register													=&gt; LSR[0]: rx fifo data valid
	=&gt; LSR[2]: parity error from the rx fifo
	=&gt; LSR[5]: the tx fifo is empty
	=&gt; LSR[6]: shift register and tx fifo are empty 
	=&gt; other bits aren't used</ipxact:description>
					<ipxact:addressOffset>'h14</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:field>
						<ipxact:name>LSR</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>MSR</ipxact:name>
					<ipxact:description>modem status</ipxact:description>
					<ipxact:addressOffset>'h18</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:field>
						<ipxact:name>MSR</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>SCR</ipxact:name>
					<ipxact:description>scratch</ipxact:description>
					<ipxact:addressOffset>'h1C</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:field>
						<ipxact:name>SCR</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>RBR_THR_DLL</ipxact:name>
					<ipxact:description>RBR_THR_DLL is a multi-purpose register address. you can access 3 different registers using the same address.												IF LCR[7] is 0  RBR and THR are accessable. OW DLL is accessable.  									RBR read only. Reads from rx fifo
THR write only. Writes into a tx fifo
DLL writes/reads into/from the 8 LSBs in the divisor		</ipxact:description>
					<ipxact:addressOffset>'h0</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:field>
						<ipxact:name>RBR_THR_DLL</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
			</ipxact:addressBlock>
			<ipxact:addressUnitBits>8</ipxact:addressUnitBits>
		</ipxact:memoryMap>
	</ipxact:memoryMaps>
	<ipxact:model>
		<ipxact:ports>
			<ipxact:port>
				<ipxact:name>rx_i</ipxact:name>
				<ipxact:description>receiver input</ipxact:description>
				<ipxact:wire>
					<ipxact:direction>in</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>tx_o</ipxact:name>
				<ipxact:description>transmitter output</ipxact:description>
				<ipxact:wire>
					<ipxact:direction>out</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>PADDR</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>in</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left>31</ipxact:left>
							<ipxact:right>0</ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>PENABLE</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>in</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>PRDATA</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>out</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left>31</ipxact:left>
							<ipxact:right>0</ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>PREADY</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>out</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>PSEL</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>in</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>PSLVERR</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>out</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>PWDATA</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>in</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left>31</ipxact:left>
							<ipxact:right>0</ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>PWRITE</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>in</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>CLK</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>in</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>RSTN</ipxact:name>
				<ipxact:wire>
					<ipxact:direction>in</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
			<ipxact:port>
				<ipxact:name>event_o</ipxact:name>
				<ipxact:description>irq/event output</ipxact:description>
				<ipxact:wire>
					<ipxact:direction>out</ipxact:direction>
					<ipxact:vectors>
						<ipxact:vector>
							<ipxact:left></ipxact:left>
							<ipxact:right></ipxact:right>
						</ipxact:vector>
					</ipxact:vectors>
					<ipxact:drivers>
						<ipxact:driver>
							<ipxact:defaultValue></ipxact:defaultValue>
						</ipxact:driver>
					</ipxact:drivers>
				</ipxact:wire>
			</ipxact:port>
		</ipxact:ports>
	</ipxact:model>
	<ipxact:description>Ipxact definition for pulp platform uart module from https://github.com/pulp-platform/apb_uart_sv.</ipxact:description>
	<ipxact:vendorExtensions>
		<kactus2:kts_attributes>
			<kactus2:kts_productHier>Flat</kactus2:kts_productHier>
			<kactus2:kts_implementation>HW</kactus2:kts_implementation>
			<kactus2:kts_firmness>Mutable</kactus2:kts_firmness>
		</kactus2:kts_attributes>
	</ipxact:vendorExtensions>
</ipxact:component>
